<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="toolStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="tsAbout.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAAJOgAACToAYJjBRwAAAIDSURBVDhPpZLrS5NhGMb3j4SWh0oRQVExD4gonkDpg4hG
        YKxG6WBogkMZKgPNCEVJFBGdGETEvgwyO9DJE5syZw3PIlPEE9pgBCLZ5XvdMB8Ew8gXbl54nuf63dd9
        0OGSnwCahxbPRNPAPMw9Xpg6ZmF46kZZ0xSKzJPIrhpDWsVnpBhGkKx3nAX8Pv7z1zg8OoY/cITdn4fw
        bf/C0kYAN3Ma/w3gWfZL5kzTKBxjWyK2DftwI9tyMYCZKXbNHaD91bLYJrDXsYbrWfUKwJrPE9M2M1Oc
        VzOOpHI7Jr376Hi9ogHqFIANO0/MmmmbmSmm9a8ze+I4MrNWAdjtoJgWcx+PSzg166yZZ8xM8XvXDix9
        c4jIqFYAjoriBV9AhEPv1mH/sonogha0afbZMMZz+yreTGyhpusHwtNNCsA5U1zS4BLxzJIfg299qO32
        Ir7UJtZfftyATqeT+8o2D8JSjQrAJblrncYL7ZJ2+bfaFnC/1S1NjL3diRat7qrO7wLRP3HjWsojBeCo
        mDEo5mNjuweFGvjWg2EBhCbpkW78htSHHwRyNdmgAFzPEee2iFkzayy2OLXzT4gr6UdUnlXrullsxxQ+
        kx0g8BTA3aZlButjSTyjODq/WcQcW/B/Je4OQhLvKQDnzN1mp0nnkvAhR8VuMzNrpm1mpjgkoVwB/v8D
        TgDQASA1MVpwzwAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        lwDXtLMAiBgXAJ5CQgBuAAAA8uXkAKdZWQCWOzsA5cvLAKtYVwDdu7sA5tLUAMaRkQDev8IA4uT5AObp
        9gDd2+4A7Oz8AF5d3AAwLvEAAAC6AAICxQCenv8Azc32AI+P6wBvb/UAb2//AJaW/wD///8AAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAZ
        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
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAABPTwAAAAAAAAAAAAAAAAAAAEAGAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPTQgLwAAAAAA
        AABcAAAAAAAAAAAhIgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWFMEAAAAAAABAAAAAAAAAAAAAQB0
        Ck8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAkovAAAAAAAAAHFycnJyAAAAAAACLXMAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAACHgAAAAAAAGlqa2xtbmhvcAAAAAAAAVoAAAAAAAAAAAAAAAAAAAAAAAAAAQEB
        AABXRgAAAAAAAABhYmNkZWZnaGkAAAABACgAAAAAAAAAAAAAAAAAAAAAAQAAAAABACMKSwABAAAAAAAA
        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
        FCQRJgotJg8PEQ8KLgAAAAAAAAAAAAAAAAAAAAAAAAAiIyQkJCQkAyUKJhETJygTGykKESorChAmDwor
        AQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcbCgocAgMPCh0XER4TCh8gEQohAAEAAAAAAAAAAAAA
        AAAAAAAAAAAAAQEAAQEBAQAHFRMRCgoRERYXDwoRGBkKEBAaAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAOCg8PEBEPEg8TFAoKAwABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHCAkK
        CgoKCgoKCwwNAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAACAwQEBAUDBgABAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=
</value>
  </data>
</root>